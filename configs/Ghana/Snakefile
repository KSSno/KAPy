#Klimaatlas Ghana Snakemake configuration file

import KAPy
import os
import re
import glob

#Load configuration
config=KAPy.configs.loadConfig()  

# Downloading ------------------------
rule URLs:
    shell:
        "python3 ./KAPy/download/searchESGF.py"


rule downloads:
    input: 
        expand(os.path.join('scratch','2b.OPeNDAP_data','{fname}'),
               fname=[re.sub('.url','',x) 
                      for x in os.listdir(os.path.join('scratch',
                                                       '2a.OPeNDAP_URLs'))])
        
rule download:
    output:
        os.path.join('scratch','2b.OPeNDAP_data','{fname}.nc')
    input:
        os.path.join('scratch','2a.OPeNDAP_URLs','{fname}.nc.url')
    run:
        KAPy.download.ESGF(input,output,config)
        

# Object configuration ------------------------
# Compile the data available into xarray datasets for further processing
rule xarrays:
    run:
        KAPy.xarrayObjects.makeDatasets(config)

# Indicators ---------------------------------
rule indicators:
    input:
        expand(os.path.join('scratch','4.indicators','i101_{stem}.nc'),
        stem=[re.sub('tas_|.pkl','',x) \
              for x in os.listdir(os.path.join('scratch','3.xarrays'))])
        
        
rule index101:
    output:
        os.path.join('scratch','4.indicators','i101_{stem}.nc')
    input:
        os.path.join('scratch','3.xarrays','tas_{stem}.pkl')
    run:
        KAPy.indicators.index101(input[0],output[0],config)

        
# Ensemble stats--------------------        
rule regridded:
    input:
        expand(os.path.join('scratch','5.regrid','{stem}'),
               stem=os.listdir(os.path.join('scratch','4.indicators')))

rule regrid:
    output:
        os.path.join('scratch','5.regrid','{stem}.nc')
    input:
        os.path.join('scratch','4.indicators','{stem}.nc')
    run:
        KAPy.xarrayObjects.regrid(input,output,config)
        
rule ensstats:
    input:
        expand(os.path.join('scratch','6.ensstat','i101_ensstat_{scenario}.nc'),
               scenario=scenarioList)

  [os.path.join(config['dirs']['output'],'DAY_EUR11_DENMARK','fwi','fwi_' + stem) 
           for stem in helpers.getValidStems(['tasmax','pr','hurs','sfcWind'],
                                            config)]

        
for sc in [thisSc['id'] for thisSc in config['scenarios'].values()]:
    rule:
        name: f'ensstat_{sc}'
        output:
            os.path.join('scratch','6.ensstat',f'i101_ensstat_{sc}.nc')
        input:
            glob.glob(os.path.join('scratch','5.regrid',f'i101_*_{sc}_*.nc'))
        run:
            KAPy.xarrayObjects.generateEnsstats(input,output,config)
        
