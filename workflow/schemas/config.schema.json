{
  "title": "KAPy configuration options",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "description": "Configuration schema for KAPy configuration objects. These configurations are usually stored in the `config.yaml` file in the root directory of the project.",
  "type": "object",
  "required": ["configurationTables","notebooks","outputGrid","arealstats","dirs","ensembles",    "primVars"],
  "additionalProperties": true,
  "properties": {
    "configurationTables": {
        "description": "Paths to configuration tables. See the documentation for each table separately",
        "required": ["inputs","indicators","scenarios","periods","seasons"],
         "additionalProperties": false,
        "properties": {
            "inputs": { 
                "description": "Path to input configuration table, relative to working directory. See [inputs.md] for more detail.",
                "type": "string"},
            "indicators": {
                "description": "Path to indicator configuration table, relative to working directory. See [indicators.md] for more detail.",
                "type": "string" },
            "scenarios": {
                "description": "Path to scenario configuration table, relative to working directory. See [scenarios.md] for more detail.",
                "type": "string" },
            "periods": { 
                "description": "Path to period configuration table, relative to working directory. See [periods.md] for more detail.",
                "type": "string" },
            "seasons": { 
                "description": "Path to season configuration table, relative to working directory. See [seasons.md] for more detail.",
                "type": "string" }}
    },
    "notebooks": { 
        "description": "Jupyter notebooks that should be compiled in the pipeline. Multiple configuration options are possible.",
      "oneOf": [
        {
          "type": "null",
           "description" : "No notebooks to be built."
            
        },
        {
          "type": "string",
           "description": "Path to a single notebook to build."
        },
        {
          "type": "array",
          "description": "Paths to multiple notebooks, specified as a list using square-braces e.g. ['foo','bar'].", 
          "items": {
            "type": "string"
          },
          "minitems": 1
        }
      ]
    },
    "outputGrid": {
      "description": "Defines the common output grid onto which KAPy interpolates all indicators before calculating ensemble statistics. Multiple approaches to regridding can be configured, as described below.",
      "oneOf": [
          {
              "type":"object",
              "required": ["regriddingEngine"],
              "additionalProperties": false,
              "description": "Omit the regridding step. Assumes that all files within an input type are on the same grid, which will be used as the output grid",
              "properties": {
        "regriddingEngine": {
            "type" : "string",
            "enum": ["None"]
            }
              }
          },
          {  
      "type": "object",
      "required": ["regriddingEngine","interpMethod","extrapMethod","xname","xunits","xmin", "xmax", "dx","yname","yunits", "ymin", "ymax","dy"],
      "additionalProperties": false,
      "description": "Perform regridding using the xesmf package. See also the [documentation for xesmf](https://xesmf.readthedocs.io/) for a more detailed description of specific configurations.",
      "properties": {
        "regriddingEngine": {
            "type" : "string",
            "enum": ["xesmf"]},
        "interpMethod": { 
            "description": "The `method` argument to `xesmf.frontend.Regridder` that chooses the regridding method. See xesmf documentation for a description of options.",
            "enum": ["bilinear","conservative","conservative_normed","patch","nearest_s2d","nearest_d2s"],
            "type": "string"},
        "extrapMethod": { 
            "description": "The `extrap_method` argument to `xesmf.frontend.Regridder` that chooses the extrapolation method. See xesmf documentation for a description of options.",
            "enum": ["inverse_dist","nearest_s2d",null],
            "type": "string"},
        "xname": { 
            "description": "Name of x axis in output files ",
            "type": "string"},
        "xunits": { 
            "description": "Units of the y axis in output files ",
            "type": "string"},
        "xmin": { 
            "description": "Western boundary of output grid. ",
            "type": "number"},
        "xmin": { 
            "description": "Western boundary of output grid. ",
            "type": "number"},
        "xmax": { 
            "description": "Eastern boundary of output grid. ",
            "type": "number"},
        "dx": { 
            "description": "Spacing between nodes in the x direction ",
            "type": "number"},
        "yname": { 
            "description": "Name of y axis in output files ",
            "type": "string"},
        "yunits": { 
            "description": "Units of the y axis in output files ",
            "type": "string"},
        "ymin": { 
            "description": "Southern boundary of output grid. ",
            "type": "number" },
        "ymax": { 
            "description": "Northern boundary of output grid. ",
            "type": "number" },
        "dy": { 
            "description": "Spacing between nodes in the y direction ",
            "type": "number"}
      }
          }
      ]
    },
    "arealstats": {
      "required": ["calcForMembers"],
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "calcForMembers": {
            "description": "Should the areal statistics be calculated for the individual ensemble members as well as for the entire ensemble. `true` or `false`.",
            "type": "boolean" }
      }
    },
    "dirs": {
        "description": "Directories for storing output and intermediate files. Can be specified as either absolute paths, or relative to the working directory. See the [KAPy concepts](../KAPy_concepts.md) documentation for a more detailed description of these items",
        "type": "object",
      "required": ["primVars", "bc", "indicators", "regridded", "ensstats", "arealstats", "notebooks"],
      "additionalProperties": false,
        "properties": {
            "primVars": { 
                "description": "Directory for storing primary variables.",
                "type": "string" },
            "bc": { 
                "description": "Directory for storing bias-corrected variables.",
                "type": "string" },
            "indicators": {
                "description": "Directory for storing indicators variables.",
                "type": "string" },
            "regridded": {
                "description": "Directory for storing indicators regridded to a common grid.",
                "type": "string" },
            "ensstats": { 
                "description": "Directory for storing enssemble statistics.",
                "type": "string" },
            "arealstats": { 
                "description": "Directory for storing statistics calculated over areas.",
                "type": "string" },
            "notebooks": {
                "description": "Directory for storing compiled Jupyter notebooks.",
                "type": "string" }
      }
    },
    "ensembles": {
        "description": "Specify the percentiles [0-100] calculated from the ensemble. We allow three values, corresponding to the upper and lower confidence limits, and the central value.",
        "type": "object",
        "required": ["upperPercentile", "centralPercentile", "lowerPercentile"],
        "additionalProperties": false,
        "properties": {
            "upperPercentile": {
                "type": "integer",
                "exclusiveMinimum": 0,
                "exclusiveMaximum": 100},
            "centralPercentile": {
                "type": "integer",
                "exclusiveMinimum": 0,
                "exclusiveMaximum": 100},
            "lowerPercentile": { 
                "type": "integer",
                "exclusiveMinimum": 0,
                "exclusiveMaximum": 100}
      }
    },
    "primVars": {
        "description": "Configuration options relating to the primary variables.",
        "type": "object",
        "required": ["storeAsNetCDF"],
        "additionalProperties": false,
        "properties": {
            "storeAsNetCDF": {
                "description": "Should the primary variables be stored as NetCDF files (`true`) or written as pickled versions of the internal xarray objects (`false`). The former work with intermediate tools, the later saves disk space.",
                "type": "boolean" }
      }
    }
  }
}
